$(document).ready((function(){let marker;let mapArray=[];let pointArray=[];let adjNodeArray={};let markerArray=[];let path=[];let destination;let floor;let userPosition={name:"name",rssi:-200};let bounds=[[7.135589,46.799919],[7.142029,46.806347]];mapboxgl.accessToken="pk.eyJ1IjoicHM2bmF2IiwiYSI6ImNrN3hyaGt6dTAwYmQzb28zdTY2OWxibWQifQ.UkpxlSM91GWp8cJVBigLtw";let map=new mapboxgl.Map({container:"map",style:"mapbox://styles/mapbox/streets-v11",center:[7.137661,46.801608],maxBounds:bounds,zoom:16});init();function init(){fetch("json/floors.geojson",{method:"GET",mode:"no-cors",cache:"no-cache",credentials:"same-origin",headers:{Accept:"application/json"}}).then(response=>{if(!response.ok){throw new Error(`Network response was not ok ${response.statusText}`)}return response.json()}).then(myJson=>startMap(myJson)).catch(error=>alert(error))}function getLocalisationPoint(){fetch("json/routes_HFR.geojson",{method:"GET",mode:"no-cors",cache:"no-cache",credentials:"same-origin",headers:{Accept:"application/json"}}).then(response=>{if(!response.ok){throw new Error(`Network response was not ok ${response.statusText}`)}return response.json()}).then(myJson=>parseGeoRoute(myJson)).catch(error=>alert(error))}function getBeaconInfo(){fetch("json/maps-crf-hfrnav.json",{method:"GET",mode:"no-cors",cache:"no-cache",credentials:"same-origin",headers:{Accept:"application/json"}}).then(response=>{if(!response.ok){throw new Error(`Network response was not ok ${response.statusText}`)}return response.json()}).then(BeaconJson=>parseJsonInfo(BeaconJson)).catch(error=>alert(error))}function startMap(myJson){mapArray=myJson.collectionFloors;floor=mapArray[0].name;map.on("load",(function(){map.addSource("floors",{type:"geojson",data:mapArray[0]});map.addLayer({id:"floors",type:"fill",source:"floors",layout:{},paint:{"fill-color":"#b7b7b7","fill-opacity":.8}})}));getLocalisationPoint()}function parseGeoRoute(myJson){pointArray=myJson.features;for(let i=0;i<pointArray.length;i++){if(pointArray[i].properties.reachable){let clonePoint=$(".dropdown-menu:first").find(".dropdown-item:first").clone(true);clonePoint.text(pointArray[i].properties.name);clonePoint.removeClass("hide");clonePoint.attr("href","?id="+pointArray[i].properties.url);clonePoint.appendTo(".dropdown-menu")}makeLinkBetweenNode(pointArray[i])}checkUriRoute(pointArray)}function newMap(floorID){map.removeLayer("floors");map.removeSource("floors");map.addSource("floors",{type:"geojson",data:mapArray[floorID]});map.addLayer({id:"floors",type:"fill",source:"floors",layout:{},paint:{"fill-color":"#b7b7b7","fill-opacity":.8}})}function drawRoute(start,end,iterator){markerArray[iterator]=map.addSource("route"+iterator,{type:"geojson",data:{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[[start.geometry.coordinates[0],start.geometry.coordinates[1]],[end.geometry.coordinates[0],end.geometry.coordinates[1]]]}}});map.addLayer({id:"route"+iterator,type:"line",source:"route"+iterator,layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#1367af","line-width":4}})}function drawInstruction(start,end){let instruction={};for(let i=0;i<start.properties.pointsAdj.length;i++){if(start.properties.pointsAdj[i].name===end){instruction=start.properties.pointsAdj[i].instructions}}let textArea=$(".instructionText p");textArea.text(instruction.voice);let photoArea=$(".instructionPhoto");let img=$("#imgInstru");if(img!==undefined){img.remove()}photoArea.prepend('<img id="imgInstru" alt="instruction" src="img/instructions/'+instruction.image+'" />')}function drawInstructionOnMap(position,bearing){map.flyTo({center:position.geometry.coordinates,zoom:18,bearing:bearing})}function deleteAllRoute(){for(let i=0;i<markerArray.length;i++){map.removeLayer("route"+i);map.removeSource("route"+i)}markerArray=[]}function MarkDestination(){let el=document.createElement("div");el.className="marker";new mapboxgl.Marker(el).setLngLat([destination.geometry.coordinates[0],destination.geometry.coordinates[1]]).addTo(map)}function isArrived(actualPosition){map.flyTo({center:actualPosition.geometry.coordinates,zoom:18,bearing:0});stop_scan();let textArea=$(".instructionText p");textArea.text("Vous êtes arrivé(e), merci d'avoir utilisé notre application");let photoArea=$(".instructionPhoto");let img=$("#imgInstru");if(img!==undefined){img.remove()}photoArea.prepend('<img id="imgArrived" alt="Arrivé" src="img/Map_pin_icon_green.svg" />');$("#imgArrived").css({width:"auto"})}function writeBufferInstruction(){let textArea=$(".instructionText p");textArea.text("Localisation en cours...");let img=$(".instructionPhoto img");if(img!==undefined){img.remove()}let photoArea=$(".instructionPhoto");photoArea.prepend('<img id="imgInstru" alt="Please wait" src="img/instructions/wait.svg" />')}$(".infoActive").click((function(){$(".rowInfo").removeClass("hide");$(".rowApp").addClass("hide")}));$(".infoDeactive").click((function(){$(".rowApp").removeClass("hide");$(".rowInfo").addClass("hide")}));function matchBeaconWithPoint(beacon){for(let i=0;i<pointArray.length;i++){if(beacon.beaconName===pointArray[i].properties.beaconName){userLocation(pointArray[i])}}}function userLocation(ActualPosition){if(floor!==ActualPosition.properties.floor){floor=ActualPosition.properties.floor;for(let i=0;i<mapArray.length;i++){if(floor===mapArray[i].name){newMap(i)}}}if(ActualPosition.properties.floor===destination.properties.floor){MarkDestination()}if(typeof marker!="undefined"){marker.remove()}marker=(new mapboxgl.Marker).setLngLat([ActualPosition.geometry.coordinates[0],ActualPosition.geometry.coordinates[1]]).addTo(map);if(markerArray.length!==0){deleteAllRoute()}if(ActualPosition.properties.name===destination.properties.name){isArrived(ActualPosition);return}if(markerArray.length===0){createRoute(ActualPosition)}}function checkUriRoute(PointArray){let parser=document.createElement("a");const regex=/=(.*)/;parser.href=window.location.href;if(parser.search!==""){let param=parser.search.match(regex);for(let i=0;i<PointArray.length;i++){if(param[1]===PointArray[i].properties.url){destination=PointArray[i]}}changeNavigationButton()}}function makeLinkBetweenNode(node){let temp={};for(let i=0;i<node.properties.pointsAdj.length;i++){temp[node.properties.pointsAdj[i].name]=node.properties.pointsAdj[i].distance}adjNodeArray[node.properties.name]=temp}function createRoute(start){if(path.length===0||start.properties.name!==path[0]){path=findShortestPath(start.properties.name,destination.properties.name).path}let endNode;let firstNode=start;for(let i=0;i<path.length;i++){for(let j=0;j<pointArray.length;j++){if(path[i]===pointArray[j].properties.name){if(start.properties.floor===pointArray[j].properties.floor)drawRoute(firstNode,pointArray[j],i);firstNode=pointArray[j]}}}for(let i=0;i<pointArray.length;i++){if(path[1]===pointArray[i].properties.name){endNode=pointArray[i]}}let bearing=calculBearing(start,endNode);drawInstruction(start,path[1]);drawInstructionOnMap(start,bearing);path.shift()}function changeNavigationButton(){if(destination!==undefined){let btnSelect=$("#dropdownMenuLink");btnSelect.text(destination.properties.name);btnSelect.css({"background-color":"#0d68ae","border-color":"#0d68ae"});let btnStart=$("#btnStart");btnStart.css({"background-color":"#64dd17","border-color":"#64dd17"})}}function calculBearing(start,nextDestination){let latStart=start.geometry.coordinates[1];let lngStart=start.geometry.coordinates[0];let latEnd=nextDestination.geometry.coordinates[1];let lngEnd=nextDestination.geometry.coordinates[0];let dLon=lngEnd-lngStart;let y=Math.sin(dLon)*Math.cos(latEnd);let x=Math.cos(latStart)*Math.sin(latEnd)-Math.sin(latStart)*Math.cos(latEnd)*Math.cos(dLon);let brng=Math.atan2(y,x);let brngDegr=brng*(180/Math.PI);return 360-(brngDegr+360)%360}function calculBearingWithWasm(start,nextDestination){let calculBearing=Module.cwrap("calcBearing","number",["number","number","number","number"]);return calculBearing(start.geometry.coordinates[0],start.geometry.coordinates[1],nextDestination.geometry.coordinates[0],nextDestination.geometry.coordinates[1])}let shortestDistanceNode=(distances,visited)=>{let shortest=null;for(let node in distances){let currentIsShortest=shortest===null||distances[node]<distances[shortest];if(currentIsShortest&&!visited.includes(node)){shortest=node}}return shortest};function findShortestPath(startNode,endNode){let graph=adjNodeArray;let distances={};distances[endNode]="Infinity";distances=Object.assign(distances,graph[startNode]);let parents={endNode:null};for(let child in graph[startNode]){parents[child]=startNode}let visited=[];let node=shortestDistanceNode(distances,visited);while(node){let distance=distances[node];let children=graph[node];for(let child in children){if(String(child)===String(startNode)){}else{let newdistance=distance+children[child];if(!distances[child]||distances[child]>newdistance){distances[child]=newdistance;parents[child]=node}}}visited.push(node);node=shortestDistanceNode(distances,visited)}let shortestPath=[endNode];let parent=parents[endNode];while(parent){shortestPath.push(parent);parent=parents[parent]}shortestPath.reverse();return{distance:distances[endNode],path:shortestPath}}$("#btnStart").click((function(){$("#btnStart").unbind("click");let counter=0;let procheBeaconArray=[];let beaconArray=[];let areBeaconAvailable=0;if(destination!==undefined){writeBufferInstruction();window.scrollTo(0,document.body.scrollHeight);let beaconJsonInfo=getBeaconInfo();navigator.bluetooth.requestLEScan({acceptAllAdvertisements:true}).then((function(result){scan=result})).catch(error=>{checkIfEnable()});navigator.bluetooth.addEventListener("advertisementreceived",event=>{if(event.name!=null){if(event.name.includes("Kontakt")){counter++;let beaconPresence=false;let beacon={name:event.device.name,rssi:event.rssi};for(let i=0;i<beaconArray.length;i++){if(beaconArray[i].name===event.device.name){beaconArray[i].rssi=event.rssi;beaconPresence=true;break}}if(beaconPresence===false){beaconArray.push(beacon)}let nearestBeacon=checkNearestBeacon(beaconArray);procheBeaconArray[counter]=nearestBeacon.name}if(beaconArray.length===0){areBeaconAvailable++}if(areBeaconAvailable>10){areBeaconAvailable=0}}if(counter===5){matchNewPosition(slidingWindow(procheBeaconArray),beaconArray,beaconJsonInfo);counter=0}})}}));function slidingWindow(procheBeacon){let counts={};for(let i=0;i<procheBeacon.length;i++){let beacon=procheBeacon[i];counts[beacon]=counts[beacon]?counts[beacon]+1:1}let biggestValue=0;let biggestKey;for(let key in counts){if(key!==undefined&&counts[key]>biggestValue){biggestKey=key;biggestValue=counts[key]}}return biggestKey}function checkNearestBeacon(beaconArray){let tempBeacon={name:"name",rssi:-200};for(let i=0;i<beaconArray.length;i++){if(beaconArray[i].rssi>tempBeacon.rssi&&beaconArray[i].name!==tempBeacon.name){tempBeacon=beaconArray[i]}}return tempBeacon}function matchNewPosition(key,beaconArray){for(let i=0;i<beaconArray.length;i++){if(beaconArray[i].name===key&&userPosition.name){sendNewPosition(beaconArray[i])}}}function sendNewPosition(nearestBeacon){for(let i=0;i<beaconJsonInfo.length;i++){if(nearestBeacon.name===beaconJsonInfo[i].beaconName&&userPosition.name!==nearestBeacon.name){userPosition=nearestBeacon;matchBeaconWithPoint(beaconJsonInfo[i])}}}function parseJsonInfo(BeaconJson){beaconJsonInfo=BeaconJson.anchors}function stop_scan(){scan.stop()}function checkIfEnable(){window.alert("Merci d'activer le Bluetooth et la position");location.reload()}}));